x <- 7
as.string(x)
as.character(x)
as.character(x,7)
print(paste("Cannot identify pollutant: ", pollutant, "."))
pollutant <- "nitrate"
print(paste("Cannot identify pollutant: ", pollutant, "."))
print(paste("Cannot identify pollutant: ", pollutant, ".", collapse = ""))
print(paste("Cannot identify pollutant: '", pollutant, "'.", collapse = ""))
print(paste("Cannot identify pollutant: '", pollutant, "'.", sep = ""))
print(paste("Cannot identify the pollutant '", pollutant, "'.", sep = ""))
i<-2
paste(i, ".csv""))
paste(i, ".csv""))
paste(i, ".csv"")
paste(i, ".csv")
paste(i, ".csv", sep = "")
help mean()
help(mean)
help(function)
help("function")
pollutantmean <- function(directory, pollutant, id = 1:332) {
col <- if pollutant == "sulfate" {
pollutantmean <- function(directory, pollutant, id = 1:332) {
col <- if pollutant == "sulfate" {
1
} else if pollutant == "nitrate" {
2
} else {
print(paste("Cannot identify the pollutant '", pollutant, "'.", sep = ""))    }
data <- NULL
for (i in id) {
fname <- paste(i, ".csv", sep = "")
tab <- read.csv(paste(directory, fname, sep = ""))
data <- c(data, tab[,col])
}
mean(data, na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
col <- if pollutant == "sulfate" {
1
} else if pollutant == "nitrate" {
2
} else {
print(paste("Cannot identify the pollutant '", pollutant, "'.", sep = ""))    }
data <- NULL
for (i in id) {
fname <- paste(i, ".csv", sep = "")
tab <- read.csv(paste(directory, fname, sep = ""))
data <- c(data, tab[,col])
}
mean(data, na.rm = TRUE)
}
help("if")
pollutantmean <- function(directory, pollutant, id = 1:332) {
col <- if (pollutant == "sulfate") {
1
} else if (pollutant == "nitrate") {
2
} else {
0
print(paste("Cannot identify the pollutant '", pollutant, "'.", sep = ""))
}
data <- NULL
for (i in id) {
fname <- paste(i, ".csv", sep = "")
tab <- read.csv(paste(directory, fname, sep = ""))
data <- c(data, tab[,col])
}
mean(data, na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
col <- if (pollutant == "sulfate") {
1
} else if (pollutant == "nitrate") {
2
} else {
0
print(paste("Cannot identify the pollutant '", pollutant, "'.", sep = ""))
}
data <- NULL
for (i in id) {
fname <- paste(i, ".csv", sep = "")
tab <- read.csv(paste(directory, fname, sep = ""))
data <- c(data, tab[,col])
}
mean(data, na.rm = TRUE)
}
pollutantmean("", "nitrate", 1)
source("complete.R")
polutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
source("complete.R")
pollutantmean("specdata", "sulfate", 1:10)
source("complete.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1)
pollutantmean("specdata", "sulfate", 1)
pollutantmean("specdata", "sulfate", 1)
pollutantmean("specdata", "sulfate", 1)
source("complete.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 72:74)
pollutantmean("specdata", "sulfate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("submitscript1.R")
submit()
1
submit()
submit()
submit()
submit()
help("data.frame")
matrix(NA, 4, 2)
x <- matrix(NA, 4, 2)
x[1,1] = 10
x[1,2] = 10
x[2,2] = 10
x[3,1] = 10
x
is.na(x)
y <- is.na(x)
y <- !is.na(x)
y
z <- y[,1] & y[,2]
z
sum(z)
z[4] <- T
z
sum(z)
id <- 1:5
id
data <- data.frame(id = id, nobs = vector("numeric", length(id)))
data
source("complete.R")
complete("specdata", 1)
source("complete.R")
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2,4,8,10,12))
source("complete.R")
complete("specdata", c(2,4,8,10,12))
complete("specdata", 1)
complete("specdata", 30:25)
complete("specdata", 3)
submit
source("submitscript1")
source("submitscript1.R")
submit()
submit()
submit()
ls
ls()
dir
dir()
dir("*.pdf")
dir(pattern = "*.pdf")
sorce(corr)
source(corr)
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
summary(cr)
source("corr.R")
cr <- corr("specdata", 150)
summary(cr)
head(cr)
source("submitscript1.R")
submit()
submit()
submit()
submit()
library(datasets)
data("iris")
?iris
ls(iris)
iris
f <- iris$Species = virginica
f <- iris$Species = "virginica"
f <- iris$Species
f
f = 2
f <- iris$Species
f == 2
f == virginica
f == "virginica"
f <- iris$Species == "virginica"
f
m = mean(iris$Sepal.Length[f])
m
mean(iris$Sepal.Length[iris$Species == "virginica"])
apply(iris[, 1:4], 2, mean)
colMeans(iris)
apply(iris, 2, mean)
data(mtcars)
?mtcars
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
mean(mtcars$mpg, mtcars$cyl)
mtcars
with(mtcars, tapply(hp, cyl, mean))
x <- with(mtcars, tapply(hp, cyl, mean))
x[3]
x[3]-x[1]
debug(ls)
ls()
c
c
c
c
set.seed(1)
rpois(5, 2)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ls
ls()
dir
dir()
ws()
workspace(9))
workspace()
workDIR
DIR()
dir()
setwd("D:/Coursera/R Programming/Assignments/Assignment 3")
head(outcome)
head(outcome)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
outcome$State
simplify(outcome$State)
unique(outcome$State)
unique(outcome$State)
u <- unique(outcome$State)
subset(u, "AL")
match(u, "AL")
match(u, "AM")
any(match(u, "AM"))
match(u, "AM", nomatch = 0)
match(u, "Al", nomatch = 0)
match(u, "AL", nomatch = 0)
any(match(u, "AL", nomatch = 0))
header(outcome)
headers(outcome)
??he
"AL" %in% u
!("AL" %in% u)
ls(outcome)
ls(outcome, sorted = FALSE)
ls(outcome, sorted = FALSE)
ls(outcome, sorted = FALSE)[1:36]
ls(outcome, sorted = FALSE)
capitalize("heart attack")
capitalize(c("Hello", "bob", "daN"))
source("best.R")
best("TX", "heart attack")
?stop
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart attac")
best("TXS", "heart attack")
source("best.R")
best("TXS", "heart attack")
best("TX", "heart attack")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart attack")
hdata$s
hdata.s
source("best.R")
best("TX", "heart attack")
best("TX", "heart attack")
hdata[s]
hdata[[s]
hdata[[s]]
source("best.R")
best("TX", "heart attack")
View(best)
source("best.R")
best("TX", "heart attack")
best("TX", "heart attack")
hdata
hdata$[s]
hdata$s
source("best.R")
best("TX", "heart attack")
best("TX", "heart attack")
hdata[hcol]
hcol
hdata[,hcol]
hdata[,1]
hdata[,11]
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
as.numeric("asm")
source("best.R")
best("TX", "heart attack")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
tab <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state = "Tx"
state = "TX"
hcol = 11
coldata = as.numeric(tab[,hcol])
r <- rank(coldata, na.last = TRUE)
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart attack")
setwd("D:/Coursera/R Programming/Assignments/Assignment 2")
ls
ls()
M <- matrix(1:4,2,2,)
M
Solve (M)
solve (M)
M_inv <- solve (M)
M %*% M_inve
M %*% M_inv
makeCacheMatrix(M)
source("cachematrix.R")
makeCacheMatrix(M)
M''
M
cacheSolve(M'')
cacheSolve(M)
makeCacheMatrix(M)
makeCacheMatrix(M)$set
makeCacheMatrix$set(M)
MM <-  makeCacheMatrix(M)
MM
MM$get()
MM$getinv()
cacheSolve(MM)
MM$getinv()
cacheSolve(MM)
x$get()
source("cachematrix.R")
MM <-  makeCacheMatrix(M)
cacheSolve(MM)
MM$getinv
MM$getinv()
